# Maintainer: Levente Polyak <anthraxx[at]archlinux[dot]org>
# Maintainer: kpcyrd <kpcyrd[at]archlinux[dot]org>
# Contributor: Sabart Otto - Seberm <seberm[at]seberm[dot]com>
# Contributor: Tobias Veit - nIcE <m.on.key.tobi[at]gmail[dot]com>

# https://gitlab.archlinux.org/archlinux/packaging/packages/metasploit/-/blob/main/PKGBUILD?ref_type=heads

pkgname=metasploit
pkgver=6.4.88
pkgrel=1
pkgdesc='Advanced open-source platform for developing, testing, and using exploit code'
url='https://www.metasploit.com/'
arch=('aarch64' 'x86_64' )
license=('BSD')
depends=(
  'git'
  'inetutils'
  'libpcap'
  'libxml2'
  'libxslt'
  'postgresql-libs'
  'ruby'
  'ruby-bundler'
  'ruby-erb'
  'sqlite'
)
options=('!strip' '!debug' '!emptydirs')
source=(git+https://github.com/rapid7/metasploit-framework.git#tag=${pkgver})
sha512sums=('f7e1a96f507a89ea026ed6afe57f659d52ddc1c63bc7a69d65bbf3d2d1fb8cae43a4cada96999d4de486c18531b266c3f9c38125168a35db43d049968706409b')

prepare() {
  cd ${pkgname}-framework

  # https://github.com/undler/bundler/issues/6882
  sed -e '/BUNDLED WITH/,+1d' -i Gemfile.lock

  bundle config set --local deployment 'true'
  sed 's|git ls-files|find -type f|' -i metasploit-framework.gemspec
}

build() {
  cd ${pkgname}-framework
  CFLAGS+=" -I/usr/include/libxml2"
  bundle install -j"$(nproc)" --no-cache
  find vendor/bundle/ruby -exec chmod o+r '{}' \;
  find vendor/bundle/ruby \( -name gem_make.out -or -name mkmf.log \) -delete
}

package() {
  cd ${pkgname}-framework

  install -d "${pkgdir}/opt/${pkgname}" "${pkgdir}/usr/bin"
  cp -r . "${pkgdir}/opt/${pkgname}"
  rm -rf "${pkgdir}/opt/${pkgname}/.git"

  for f in "${pkgdir}"/opt/${pkgname}/msf*; do
    local _msffile="${pkgdir}/usr/bin/`basename "${f}"`"
    echo -e "#!/bin/sh\nBUNDLE_GEMFILE=/opt/${pkgname}/Gemfile exec bundle exec ruby /opt/${pkgname}/`basename "${f}"` \"\$@\"" > "${_msffile}"
    chmod 755 "${_msffile}"
  done

  (cd "${pkgdir}/opt/${pkgname}"
    for f in tools/*/*.rb; do
      install -Dm 755 "${f}" ".${f}"
      echo -e "#!/bin/sh\nBUNDLE_GEMFILE=/opt/${pkgname}/Gemfile exec bundle exec ruby /opt/${pkgname}/."${f}" \"\$@\"" > "${f}"
      chmod 755 "${f}"
    done
  )

  install -Dm 644 external/zsh/_* -t "${pkgdir}/usr/share/zsh/site-functions"
  install -Dm 644 LICENSE COPYING -t "${pkgdir}/usr/share/licenses/${pkgname}"
  install -d "${pkgdir}/usr/share/doc"
  mv "${pkgdir}/opt/${pkgname}/documentation" "${pkgdir}/usr/share/doc/${pkgname}"
  rm "${pkgdir}/usr/bin/msfupdate"
  rm -r "${pkgdir}"/opt/metasploit/vendor/bundle/ruby/*/cache
  sed -e '/^BUNDLE_JOBS/d' -i "${pkgdir}/opt/metasploit/.bundle/config"
  find "${pkgdir}/opt/metasploit/vendor/bundle/ruby/" -name Makefile -delete

  cat <<EOF > "${pkgdir}/opt/${pkgname}/script-exploit"
#!/bin/sh
name_script=\$(basename \$0)
tool_name=\${name_script##msf-}

exec "${pkgdir}/opt/${pkgname}/tools/exploit/\$tool_name" "\$@"
EOF

  cat <<EOF > "${pkgdir}/opt/${pkgname}/script-password"
#!/bin/sh
name_script=\$(basename \$0)
tool_name=\${name_script##msf-}

exec "${pkgdir}/opt/${pkgname}/tools/password/\$tool_name" "\$@"
EOF

  cat <<EOF > "${pkgdir}/opt/${pkgname}/script-recon"
#!/bin/sh
name_script=\$(basename \$0)
tool_name=\${name_script##msf-}

exec "${pkgdir}/opt/${pkgname}/tools/recon/\$tool_name" "\$@"
EOF

  chmod +x "${pkgdir}/opt/${pkgname}/script-exploit"
  chmod +x "${pkgdir}/opt/${pkgname}/script-password"
  chmod +x "${pkgdir}/opt/${pkgname}/script-recon"

  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-egghunter"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-exe2vba"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-exe2vbs"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-find_badchars"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-java_deserializer"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-jsobfu"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-metasm_shell"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-msf_irb_shell"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-nasm_shell"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-pattern_create"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-pattern_offset"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-pdf2xdp"
  ln -s "/opt/${pkgname}/script-exploit" "${pkgdir}/usr/bin/msf-virustotal"

  ln -s "/opt/${pkgname}/script-password" "${pkgdir}/usr/bin/msf-halflm_second"
  ln -s "/opt/${pkgname}/script-password" "${pkgdir}/usr/bin/msf-hmac_sha1_crack"
  ln -s "/opt/${pkgname}/script-password" "${pkgdir}/usr/bin/msf-ms5_lookup"

  ln -s "/opt/${pkgname}/script-recon" "${pkgdir}/usr/bin/msf-makeiplist"
}

# vim: ts=2 sw=2 et:
